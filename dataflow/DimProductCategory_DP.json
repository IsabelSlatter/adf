{
	"name": "DimProductCategory_DP",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesLT_Product",
						"type": "DatasetReference"
					},
					"name": "product"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "DimProduct",
					"description": "Current rows in DimEmployees DW table"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "sinkNew"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "sinkInactive",
					"description": "Close out the old version of the row"
				},
				{
					"dataset": {
						"referenceName": "DimProduct",
						"type": "DatasetReference"
					},
					"name": "sinkChanges",
					"description": "New row with changes"
				}
			],
			"transformations": [
				{
					"name": "productWithSurrogate"
				},
				{
					"name": "DoesRowExist"
				},
				{
					"name": "RowHasChanged"
				},
				{
					"name": "productWithDates"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\twildcardPaths:['*.*']) ~> product\nsource(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimProduct\nproduct, DimProduct lookup(product@Name == DimProduct@Name,\n\tmultiple: false,\n\tpickup: 'first',\n\tdesc(EndDate, true),\n\tbroadcast: 'auto')~> productWithSurrogate\nproductWithDates split(isNull(product@ProductCategoryID),\n\tdisjoint: false) ~> DoesRowExist@(NewRow, CurrentRow)\nDoesRowExist@CurrentRow, DimProduct exists(DoesRowExist@CurrentRow@ProductID == DimProduct@ProductID\n\t&& DoesRowExist@CurrentRow@Name == DimProduct@Name\n\t&& DoesRowExist@CurrentRow@ProductNumber == DimProduct@ProductNumber,\n\tnegate:true,\n\tbroadcast: 'auto')~> RowHasChanged\nproductWithSurrogate derive(StartDate = currentTimestamp(),\n\t\tEndDate = toTimestamp(\"9999-12-31 23:59:59\"),\n\t\tRowStatusNew = \"NEW\",\n\t\tRowStatusChange = \"CHANGE\") ~> productWithDates\nRowHasChanged alterRow(upsertIf(1==1)) ~> AlterRow1\nDoesRowExist@NewRow sink(input(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tbatchSize: 50,\n\tmapColumn(\n\t\tProductID = DoesRowExist@NewRow@ProductID,\n\t\tName = DoesRowExist@NewRow@Name,\n\t\tProductNumber = DoesRowExist@NewRow@ProductNumber,\n\t\tColor = DoesRowExist@NewRow@Color,\n\t\tStandardCost = DoesRowExist@NewRow@StandardCost,\n\t\tListPrice = DoesRowExist@NewRow@ListPrice,\n\t\tSize = DoesRowExist@NewRow@Size,\n\t\tWeight = DoesRowExist@NewRow@Weight,\n\t\tProductCategoryID = DoesRowExist@NewRow@ProductCategoryID,\n\t\tProductModelID = DoesRowExist@NewRow@ProductModelID,\n\t\tSellStartDate = DoesRowExist@NewRow@SellStartDate,\n\t\tSellEndDate = DoesRowExist@NewRow@SellEndDate,\n\t\tDiscontinuedDate = DoesRowExist@NewRow@DiscontinuedDate,\n\t\tThumbNailPhoto = DoesRowExist@NewRow@ThumbNailPhoto,\n\t\tThumbnailPhotoFileName = DoesRowExist@NewRow@ThumbnailPhotoFileName,\n\t\trowguid = DoesRowExist@NewRow@rowguid,\n\t\tModifiedDate = DoesRowExist@NewRow@ModifiedDate\n\t),\n\tpartitionBy('roundRobin', 4),\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkNew\nAlterRow1 sink(input(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ProductID','Name'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tbatchSize: 50,\n\tmapColumn(\n\t\tProductID = DoesRowExist@CurrentRow@ProductID,\n\t\tName = DoesRowExist@CurrentRow@Name,\n\t\tProductNumber = DoesRowExist@CurrentRow@ProductNumber,\n\t\tColor = DoesRowExist@CurrentRow@Color,\n\t\tStandardCost = DoesRowExist@CurrentRow@StandardCost,\n\t\tListPrice = DoesRowExist@CurrentRow@ListPrice,\n\t\tSize = DoesRowExist@CurrentRow@Size,\n\t\tWeight = DoesRowExist@CurrentRow@Weight,\n\t\tProductCategoryID = DoesRowExist@CurrentRow@ProductCategoryID,\n\t\tProductModelID = DoesRowExist@CurrentRow@ProductModelID,\n\t\tSellStartDate = DoesRowExist@CurrentRow@SellStartDate,\n\t\tSellEndDate = DoesRowExist@CurrentRow@SellEndDate,\n\t\tDiscontinuedDate = DoesRowExist@CurrentRow@DiscontinuedDate,\n\t\tThumbNailPhoto = DoesRowExist@CurrentRow@ThumbNailPhoto,\n\t\tThumbnailPhotoFileName = DoesRowExist@CurrentRow@ThumbnailPhotoFileName,\n\t\trowguid = DoesRowExist@CurrentRow@rowguid,\n\t\tModifiedDate = DoesRowExist@CurrentRow@ModifiedDate\n\t),\n\tpartitionBy('roundRobin', 4),\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkInactive\nRowHasChanged sink(input(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductNumber = DoesRowExist@CurrentRow@ProductNumber,\n\t\tColor = DoesRowExist@CurrentRow@Color,\n\t\tStandardCost = DoesRowExist@CurrentRow@StandardCost,\n\t\tListPrice = DoesRowExist@CurrentRow@ListPrice,\n\t\tSize = DoesRowExist@CurrentRow@Size,\n\t\tWeight = DoesRowExist@CurrentRow@Weight,\n\t\tProductCategoryID = DoesRowExist@CurrentRow@ProductCategoryID,\n\t\tProductModelID = DoesRowExist@CurrentRow@ProductModelID,\n\t\tSellStartDate = DoesRowExist@CurrentRow@SellStartDate,\n\t\tSellEndDate = DoesRowExist@CurrentRow@SellEndDate,\n\t\tDiscontinuedDate = DoesRowExist@CurrentRow@DiscontinuedDate,\n\t\tThumbNailPhoto = DoesRowExist@CurrentRow@ThumbNailPhoto,\n\t\tThumbnailPhotoFileName = DoesRowExist@CurrentRow@ThumbnailPhotoFileName,\n\t\trowguid = DoesRowExist@CurrentRow@rowguid,\n\t\tModifiedDate = DoesRowExist@CurrentRow@ModifiedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkChanges"
		}
	}
}